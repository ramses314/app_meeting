from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ParseMode, KeyboardButton, ReplyKeyboardMarkup

from db.create_db import send_db_sick


async def send_gender(message : types.Message):
    markup = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–ü–∞—Ä–µ–Ω—å', callback_data="mch2_–ø–∞—Ä–µ–Ω—å_gender")
    but2 = InlineKeyboardButton('–î–µ–≤—É—à–∫–∞', callback_data="mch2_–¥–µ–≤—É—à–∫–∞_gender")
    but3 = InlineKeyboardButton('–î—Ä—É–≥–æ–µ', callback_data="mch2_–¥—Ä—É–≥–æ–µ_gender")
    markup.row(but1, but2, but3)
    await message.answer('–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —Å–≤–æ–π –≥–µ–Ω–¥–µ—Ä', reply_markup=markup)

async def send_personality(callback : types.CallbackQuery):
    markup = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç', callback_data="mch3_—ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç")
    but2 = InlineKeyboardButton('–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç', callback_data="mch3_–∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç")
    but3 = InlineKeyboardButton('–ê–º–±–∏–≤–µ—Ç—Ä', callback_data="mch3_–∞–º–±–∏–≤–µ—Ç—Ä")
    markup.row(but1, but3, but2)
    await callback.message.edit_text('–ö–∞–∫–æ–π —É —Ç–µ–±—è —Ç–∏–ø —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞', reply_markup=markup)


async def send_disease(callback : types.CallbackQuery):
    markup = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–§–∏–∑–∏—á–µ—Å–∫–∏–µ', callback_data="mch3_physical")
    but2 = InlineKeyboardButton('–ü—Å–∏—Ö–æ–ª–æ–≥–Ω–∏—á–µ—Å–∫–∏–µ', callback_data="mch3_crazy")
    markup.row(but1, but2)
    await callback.message.edit_text('–° –∫–∞–∫–æ–π –ø—Ä–æ–±–ª–µ–º–æ–π —Ç—ã —Å—Ç–æ–ª–∫–Ω—É–ª—Å—è? –í—ã–±–µ—Ä–∏ —Å–∞–º–æ–µ –æ—Å–Ω–æ–≤–Ω–æ–µ, –ø–æ—Ç–æ–º —Ç—ã —Å–º–æ–∂–µ—à—å '
                                      '–¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º—ã –∏ —Ç.–¥.', reply_markup=markup)


async def send_disease_some(callback : types.CallbackQuery, type_of_table):
    markup = InlineKeyboardMarkup()
    a = await send_db_sick(type_of_table)
    for i in a:
        but = InlineKeyboardButton(f'{i[1]}', callback_data=f'mch4_{i[1]}')
        markup.row(but)
    but_x = InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='mch3_null')
    markup.row(but_x)
    await callback.message.edit_text('–≤—ã–±–µ—Ä–∏ –ø–æ–¥–ø—É–Ω–∫—Ç', reply_markup=markup)


async def send_scale_of_pain(callback : types.CallbackQuery):
    markup = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('1', callback_data="mch5_1")
    but2 = InlineKeyboardButton('2', callback_data="mch5_2")
    but3 = InlineKeyboardButton('3', callback_data="mch5_3")
    but4 = InlineKeyboardButton('4', callback_data="mch5_4")
    but5 = InlineKeyboardButton('5', callback_data="mch5_5")
    but6 = InlineKeyboardButton('6', callback_data="mch5_6")
    but7 = InlineKeyboardButton('7', callback_data="mch5_7")
    but8 = InlineKeyboardButton('8', callback_data="mch5_8")
    but9 = InlineKeyboardButton('9', callback_data="mch5_9")
    but10 = InlineKeyboardButton('10', callback_data="mch5_10")
    markup.row(but1, but2, but3, but4, but5).row(but6, but7, but8, but9, but10)
    await callback.message.edit_text('–û—Ü–µ–Ω–∏ —Å–≤–æ—é –±–æ–ª—å –ø–æ –¥–µ—Å—è—Ç–∏–±–∞–ª—å–Ω–æ–π —à–∫–∞–ª–µ', reply_markup=markup)


async def send_phone(message : types.Message):
    but_1 = KeyboardButton('üëâüèº –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º üëàüèº', request_contact=True)
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(but_1)
    await message.answer('—Ç–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –±—É–¥—É—â–µ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏', reply_markup=markup)

