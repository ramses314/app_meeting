from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ParseMode, KeyboardButton, ReplyKeyboardMarkup

from db.function_db import send_db_sick


async def send_gender(message : types.Message):
    markup = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–ú—É–∂—Å–∫–æ–π', callback_data="mch2_–ø–∞—Ä–µ–Ω—å_gender")
    but2 = InlineKeyboardButton('–ñ–µ–Ω—Å–∫–∏–π', callback_data="mch2_–¥–µ–≤—É—à–∫–∞_gender")
    # but3 = InlineKeyboardButton('–î—Ä—É–≥–æ–µ üß¨', callback_data="mch2_–¥—Ä—É–≥–æ–µ_gender")
    markup.row(but1, but2)
    await message.answer('–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø–æ–ª', reply_markup=markup)


async def send_personality(callback : types.CallbackQuery):
    markup = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç', callback_data="mch3_—ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç")
    but2 = InlineKeyboardButton('–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç', callback_data="mch3_–∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç")
    but3 = InlineKeyboardButton('–ê–º–±–∏–≤–µ—Ç—Ä', callback_data="mch3_–∞–º–±–∏–≤–µ—Ç—Ä")
    markup.row(but1, but3, but2)
    await callback.message.edit_text('–ö–∞–∫–æ–π —É —Ç–µ–±—è —Ç–∏–ø —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞? ü§î'
                                     '\n\nA–º–±–∏–≤–µ—Ä—Ç ‚Äì —ç—Ç–æ —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä–æ–º—É —Å–≤–æ–π—Å—Ç–≤–µ–Ω–Ω—ã '
                                     '–ø—Ä–æ—è–≤–ª–µ–Ω–∏—è –ø–æ–≤–µ–¥–µ–Ω–∏—è –∏ –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç–∞, –∏ —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç–∞.', reply_markup=markup)


async def send_disease(callback : types.CallbackQuery):
    markup = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–§–∏–∑–∏—á–µ—Å–∫–∏–µ', callback_data="mch3_physical")
    but2 = InlineKeyboardButton('–ü—Å–∏—Ö–æ–ª–æ–≥–Ω–∏—á–µ—Å–∫–∏–µ', callback_data="mch3_crazy")
    markup.row(but1, but2)
    await callback.message.edit_text('–° –∫–∞–∫–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç—å—é —Ç—ã —Å—Ç–æ–ª–∫–Ω—É–ª—Å—è? ü•∫ –í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –æ—Å–Ω–æ–≤–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É, –ø–æ—Ç–æ–º —Ç—ã —Å–º–æ–∂–µ—à—å '
                                      '–¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º—ã', reply_markup=markup)
    await callback.answer()


async def send_disease_some(callback : types.CallbackQuery, type_of_table):
    markup = InlineKeyboardMarkup()
    a = await send_db_sick(type_of_table)
    for i in a:
        but = InlineKeyboardButton(f'{i[1]}', callback_data=f'mch4_{i[1]}')
        markup.row(but)
    but_x = InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='mch3_null')
    markup.row(but_x)
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏ –ø–æ–¥–ø—É–Ω–∫—Ç üíÅüèº‚Äç‚ôÄÔ∏è', reply_markup=markup)
    await callback.answer()


async def send_scale_of_pain(callback : types.CallbackQuery):
    markup = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('1', callback_data="mch5_1")
    but2 = InlineKeyboardButton('2', callback_data="mch5_2")
    but3 = InlineKeyboardButton('3', callback_data="mch5_3")
    but4 = InlineKeyboardButton('4', callback_data="mch5_4")
    but5 = InlineKeyboardButton('5', callback_data="mch5_5")
    but6 = InlineKeyboardButton('6', callback_data="mch5_6")
    but7 = InlineKeyboardButton('7', callback_data="mch5_7")
    but8 = InlineKeyboardButton('8', callback_data="mch5_8")
    but9 = InlineKeyboardButton('9', callback_data="mch5_9")
    but10 = InlineKeyboardButton('10', callback_data="mch5_10")
    markup.row(but1, but2, but3, but4, but5).row(but6, but7, but8, but9, but10)
    await callback.message.edit_text('–û—Ü–µ–Ω–∏ —Å–≤–æ—é –±–æ–ª—å –ø–æ –¥–µ—Å—è—Ç–∏–±–∞–ª—å–Ω–æ–π —à–∫–∞–ª–µ üòî', reply_markup=markup)


async def send_phone(message : types.Message):
    but_1 = KeyboardButton('üëâüèº –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º üëàüèº', request_contact=True)
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(but_1)
    await message.answer('–¢–µ–ø–µ—Ä—å –ø–æ–¥–µ–ª–∏—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –¥–ª—è –±—É–¥—É—â–µ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ)üëáüèºüëáüèºüëáüèº', reply_markup=markup)


async def send_ending(message : types.Message):
    markup = InlineKeyboardMarkup()
    but_1 = InlineKeyboardButton('–ü—Ä–∏–Ω–∏–º–∞—é', callback_data='yes')
    but_2 = InlineKeyboardButton('–û—Ç–∫–∞–∑—ã–≤–∞—é—Å—å', callback_data='no')
    markup.add(but_1, but_2)
    await message.answer('‚ùóÔ∏è–ü–æ–º–Ω–∏, —á—Ç–æ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –ª—é–¥–∏ –º–æ–≥—É—Ç –≤—ã–¥–∞–≤–∞—Ç—å —Å–µ–±—è –∑–∞ –¥—Ä—É–≥–∏—Ö –∏ '
                         '–æ–ø—É–±–ª–∏–∫–æ–≤—ã–≤–∞—Ç—å –Ω–µ–¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –ü—Ä–æ–¥–æ–ª–∂–∞—è —Ç—ã —Å–æ–≥–ª–∞—à–∞–µ—à—å—Å—è —Å '
                         '–≤–æ–∑–º–æ–∂–Ω—ã–º–∏ —Ä–∏—Å–∫–∞–º–∏ –∏ —Å–∞–º –∑–∞ —Å–µ–±—è –Ω–µ—Å–µ—à—å –æ—Ç–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ—Å—Ç—å.', reply_markup=markup)




# –ù–∏–∂–µ –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Ö–æ—á–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å —Å–≤–æ–µ —Ñ–æ—Ç–æ
# –°–æ–º–Ω–µ–≤–∞—é—Å—å –¥–æ–±–∞–≤–ª—è—Ç—å —ç—Ç–æ –≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, —Ç–∞–∫ –∫–∞–∫ –µ—Å–ª–∏ –ø–æ—è–≤–∏—Ç—å—Å—è —Ç–∞–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å, –µ—Å—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å,
# —á—Ç–æ –≤—Å–µ —Å—Ç–∞–Ω—É—Ç –µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è
# async def send_for_not_photo(message : types.Message):
#     markup = InlineKeyboardMarkup()
#     but1 = InlineKeyboardButton('–°—Ç–µ—Å–Ω—è—é—Å—å —Å–µ–±—è', callback_data="nofoto")
#     but2 = InlineKeyboardButton('–ù–µ –ª—é–±–ª—é —Ñ–æ—Ç–∞—Ç—å—Å—è', callback_data="nofoto")
#     but3 = InlineKeyboardButton('–ù–µ —Ö–æ—á—É', callback_data="nofoto")
#     but4 = InlineKeyboardButton('–ù–µ –≤–∞–∂–Ω–æ', callback_data="nofoto")
#     markup.row(but1, but2, but4)
#     await message.answer('–ü–æ –∫–∞–∫–æ–π –ø—Ä–∏—á–∏–Ω–µ –Ω–µ —Ö–æ—á–µ—à—å?', reply_markup=markup)
#
# async def send_for_not_photo_two(message : types.Message):
#     markup = InlineKeyboardMarkup()
#     but1 = InlineKeyboardButton('–ñ–∏–≤–æ—Ç–Ω—ã–µ', callback_data="nofoto")
#     but2 = InlineKeyboardButton('–ê–Ω–∏–º–µ', callback_data="nofoto")
#     but3 = InlineKeyboardButton('–≠–º–æ–¥–∂–∏', callback_data="nofoto")
#     markup.row(but1, but2, but3)
#     await message.answer('–ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, —Ç—ã –∏–º–µ–µ—à—å –Ω–∞ —ç—Ç–æ –ø—Ä–∞–≤–æ, –≤—ã–±–µ—Ä–∏ –ª—É—á—à–µ, –∫–∞–∫–∞—è —Ç–µ–º–∞ —Ç–µ–±–µ –±–æ–ª—å—à–µ –Ω—Ä–∞–≤–∏—Ç—å—Å—è', reply_markup=markup)


